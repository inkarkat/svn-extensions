#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Save the full dirty working copy in a temporary patch (named NAME) and revert
it. Instead of creating a stash, you can also pass one of the following
subcommands:
list:   Show all stashed commits.
apply:  Apply the topmost stashed commit onto the working copy.
pop:    Apply and the topmost stashed commit onto the working copy and remove it from the stash.
drop:   Remove a single stash.
clear:  Throw away all stashes.
create:	Just create a patch, but do not revert the working copy.
Usage: "$(basename "$1")" [list|apply|pop|drop|clear|create|-n|--name NAME] [-b] [-w] [-c M | -r N[:M]] [TARGET[@REV]...] [-?|-h|--help]
HELPTEXT
}

getLastPatch()
{
    cd "$stashDir" && ls -1t | head -n 1
}

apply()
{
    [ -e "$1" ] && svn-applyr "$1"
    status=$?
    svn status
    return $?
}

rootdir=$(svn-root) || exit $?
cd "$rootdir" || exit $?
readonly stashDir='.svn/stashes'

typeset isRevert=t
if [ $# -eq 1 ]; then
    case $1 in
	list)	cd "$stashDir" || exit $?
		IFS=$'\n'
		for file in $(ls -1rt)
		do
		    printf '%s\n' "$file"
		    diffstat -C "$file"
		done
		exit $?
		;;
	apply)	lastPatchFile="${stashDir}/$(getLastPatch)"
		apply "$lastPatchFile"
		exit $?
		;;
	pop)	lastPatchFile="${stashDir}/$(getLastPatch)"
		apply "$lastPatchFile" && rm "$lastPatchFile"
		exit $?
		;;
	drop)	lastPatchFile="${stashDir}/$(getLastPatch)"
		[ -e "$lastPatchFile" ] && rm -i "$lastPatchFile"
		exit $?
		;;
	clear)	rm -ir "${stashDir}/"*
		exit $?
		;;
    esac
fi

typeset -a allargs=()
typeset name="stash-$(date +%Y%m%d-%H%M%S)"
[ "$1" = 'create' ] && { shift; isRevert=; }
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--name|-n)	shift; name="$1"; shift;;
	*)		allargs+=("$1")
			shift
			;;
    esac
done

[ -d "$stashDir" ] || mkdir -p "$stashDir" || { echo >&2 'Failed to create stashes directory.'; exit $?; }
[ -w "$stashDir" ] || { echo >&2 "Cannot write to stashes directory: ${PWD%/}/$stashDir"; exit 1; }

readonly stashFilespec="${stashDir}/${name}.patch"
svn-diff --no-color "${allargs[@]}" > "$stashFilespec" || exit $?
diffstat -C "$stashFilespec"
if [ "$isRevert" ]; then
    if [ ${#allargs[@]} -eq 0 ]; then
	svn revert --recursive .
    else
	svn revert --recursive "${allargs[@]}"
    fi
fi
