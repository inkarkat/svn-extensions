#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Show server revisions, i.e. whether there are new revisions on the server and
you should update your working copy. 
Usage: "$(basename "$1")" [TARGET[@REV]...] [-?|-h|--help]
HELPTEXT
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac 

: ${COLOR_YOUR:='[36m'}
: ${COLOR_RESET:='[0m'}
colorize()
{
    sed -e "s/^Your .*$/${COLOR_YOUR}\\0${COLOR_RESET}/"
}

TMPFILE=$(mktemp --tmpdir "$(basename -- "$0")-XXXXXX" 2>/dev/null || echo "${TEMP:-/tmp}/$(basename -- "$0").$$")
cleanup()
{
    rm "$TMPFILE" 2>/dev/null
}
trap 'cleanup' 0


svn info "$@" | sed -e 's/^/Your   /' > "$TMPFILE" || exit 1 
lastLocalRevision=$(sed -n -e 's/^Your * Last Changed Rev: \(.*\)$/\1/p' "$TMPFILE")
repositoryUrl=$(sed -n -e 's/^Your * URL: \(.*\)$/\1/p' "$TMPFILE")

svn info "$@" "$repositoryUrl" | sed -e 's/^/Server /' >> "$TMPFILE" || exit 1
lastRepoRevision=$(sed -n -e 's/^Server Last Changed Rev: \(.*\)$/\1/p' "$TMPFILE")

for key in 'Server URL: ' 'Revision: ' 'Changed Author: ' 'Changed Rev: ' 'Changed Date: '
do
    GREP_OPTIONS= grep -e "$key" "$TMPFILE"
done | colorize 

echo
readonly revisionDiff=$((lastRepoRevision - lastLocalRevision))
if [ $revisionDiff -eq 0 ]; then
    echo "You have the latest revision r$lastLocalRevision that is also on the server."
elif [ $revisionDiff -eq 1 ]; then
    echo "You are $revisionDiff revision behind the server, which has r$lastRepoRevision" 
else
    echo "You are $revisionDiff revisions behind the server, which has r$((lastLocalRevision + 1))..r$lastRepoRevision"
fi
