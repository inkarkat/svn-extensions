#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Show log sorted by name and their commits. 
--no-merge	Exclude any commits that mention merge in the revision summary. 
Note: svn log option -v is not supported here, but also doesn't make sense here. 
Usage: "$(basename "$1")" [--no-merge] [-c M | -r N[:M]] [-l|--limit ARG] [PATH...] [-?|-h|--help]
HELPTEXT
}

: ${COLOR_REVISION:='[36m'}
: ${COLOR_DATE:='[34m'}
: ${COLOR_RESET:='[0m'}
colorize()
{
    sed -e "s/^\\([^ ]\+\\) \\([^ ]\+\\) \\(.*\\)/${COLOR_REVISION}\\1${COLOR_RESET} ${COLOR_DATE}\\2${COLOR_RESET} \\3/"
}

typeset filter=cat
typeset -a allargs=()
while [ $# -gt 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-merge)	shift; filter='grep -iv merg\(e\|ed\|es\|ing\)\b';;
	*)
	    allargs+=("$1")
	    shift
	    ;;
    esac
done

# svn log "${allargs[@]}" | sed -ne '
# /^r[0-9]\+/{
#     s/\(^r[0-9]\+\) *| *\([^ |]\+\) *| *[^ |]\+[^|]*|.*/\2 | \1: /
#     N
#     N
#     s/\n//g
#     p
# }
# ' | $filter

cat /tmp/svn | awk -F\| '
{
    if (NF == 0)
	next
    cnt[$1]++
    commits[$1] = commits[$1] "\n      " $2
}
END {
    for (i in commits) { 
	entries[cnt[i]] = entries[cnt[i]] (entries[cnt[i]] == "" ? "" : "\n") i "(" cnt[i] "):" commits[i]
    }

    n = asorti(entries, dest)
    for (i = n; i > 0; i--) {
	print entries[dest[i]]
    }
}
' | less --RAW-CONTROL-CHARS
