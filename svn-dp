#!/bin/bash

shopt -qs extglob 2>/dev/null

printUsage()
{
    cat <<HELPTEXT
Diff with predecessor, either current COMMITTED revision to PREV, or
revision REV to its predecessor.
With -b (ignore space change) and -w (ignore all white space) options.
Can also show statistics with --stat, --numstat and --shortstat.
--no-color	Turn off color highlighting.
Note: The [@REV] is only a revision peg for use on the server; you cannot
specify a local revision with it.
Usage: "$(basename "$1")" [-b] [-w] [[-r|--revision] REV [[-r|--revision] REV ...]] [--stat|--numstat|--shortstat [--separate-stats]] [--no-color] [TARGET[@REV]...] [-?|-h|--help]
HELPTEXT
}

: ${COLOR_HEADER:='[36m'}
: ${COLOR_RESET:='[0m'}
# Highlight diff output if available.
hasColorDiff=
type -t colordiff >/dev/null && hasColorDiff=t
isColor=t
typeset -a allargs=()
diffStatArgs=
typeset -a statArgs=()
isSeparateStats=
typeset -a revisions=()
while [ $# -gt 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color)
			allargs+=("$1")	# Pass option along to my svn diff wrapper.
			shift
			isColor=
			hasColorDiff=
			# And clear all colors used here.
			for color in ${!COLOR_@}; do
			    unset $color
			done
			;;
	--change|-c)	shift; revisions+=("${1#r}"); shift;;
	--revision|-r)	shift; revisions+=("${1#r}"); shift;;
	?(r)+([0-9]))	       revisions+=("${1#r}"); shift;;
	--stat)
	    statArgs+=("$1")
	    shift
	    diffStatArgs='-C'
	    ;;
	--numstat)
	    statArgs+=("$1")
	    shift
	    diffStatArgs='-C -f0'
	    ;;
	--shortstat)
	    statArgs+=("$1")
	    shift
	    diffStatArgs='-C -s'
	    ;;
	--separate-stats)		shift; isSeparateStats=t;;
	*)
	    allargs+=("$1")
	    shift
	    ;;
    esac
done
[ "$isColor" ] || diffStatArgs=${diffStatArgs//-C/}

diffInitialVersion()
{
    revision=$1
    shift
    # This works only if we have passed file(s).
    for filespec
    do
	[ "$filespec" ] || continue
	# Check for nonexistence of that file in revisions before the passed
	# revision by trying to get the info; I hope this is faster that svn
	# cat.
	svn info --non-interactive --revision "$((revision - 1))" "$filespec" >/dev/null 2>&1 && continue
	diff -u /dev/null <(svn cat --non-interactive --revision "$revision" "$filespec") | if [ "$hasColorDiff" ]; then colordiff; else cat; fi
    done
}

diffHandlingMoves()
{
    revision=$1; shift

    svn-wrapper diff --change $revision "$@" && return 0

    # svn diff returned an error; it may have been unable to find the repository
    # location for the predecessor, in case it was moved or renamed.
    # The svn-renamed gives us the move information. To avoid superfluous
    # processing, start the query at $revision and limit the log output to the
    # minimal 2 entries necessary: The log of $revision (containing the move
    # info), and the predecessor (containing the predecessor revision).
    # Note: svn-renamed doesn't support the --no-color argument; filter it out.
    typeset renamings=$(svn-renamed --non-interactive --revision "${revision}:1" --limit 2 "${@//--no-color/}")
    if [ "$renamings" ]; then
	echo "$renamings" | {
	    IFS=$'\t'
	    read -r currentRev currentPath
	    read -r previousRev previousPath
	    [ "$previousRev" -a "$previousPath" -a "$previousRev" ] || return 1
	    echo >&2 "svn-dp: Following file move from ${previousPath} in revision ${previousRev}"
	    svn-wrapper diff --revision ${previousRev#r}:${revision} --old="^${previousPath}" --new="^${currentPath}"
	}
    else
	diffInitialVersion "$revision" "${@//--no-color/}"
    fi
}

set -o pipefail
if [ ${#revisions[@]} -eq 0 ]; then
    svn-wrapper diff -r PREV:COMMITTED "${statArgs[@]}" "${allargs[@]}"
elif [ ${#revisions[@]} -eq 1 ]; then
    diffHandlingMoves $revisions "${statArgs[@]}" "${allargs[@]}"
else
    typeset isPipeThroughStat=
    if [ ${#statArgs} -gt 0 -a ! "$isSeparateStats" ]; then
	allargs+=('--no-color')	# We don't need coloring in the intermediate diff output; diffstat will summarize it, anyway.
	statArgs=() # Don't stat individual diffs.
	isPipeThroughStat=t
    fi

    typeset isFirstEntry=t
    for revision in "${revisions[@]}"
    do
	if [ ! "$isPipeThroughStat" ]; then
	    [ "$isFirstEntry" ] && isFirstEntry= || echo
	    echo "${COLOR_HEADER}revision r${revision}${COLOR_RESET}"
	fi
	diffHandlingMoves $revision "${statArgs[@]}" "${allargs[@]}"
    done | \
	if [ "$isPipeThroughStat" ]; then
	    diffstat $diffStatArgs | "${PAGER:-less}" --quit-on-intr --RAW-CONTROL-CHARS
	else
	    "${PAGER:-less}" --quit-on-intr --RAW-CONTROL-CHARS
	fi
fi
