#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Show the product version for the current repo / passed revision(s).
Usage: "$(basename "$1") [[-r|--revision] REV]"
HELPTEXT
}

shopt -qs extglob
typeset -a revisions=()
while [ $# -gt 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--revision|-r)	shift; revisions+=("$1"); shift;;
	?(r)+([0-9]))	       revisions+=("${1#r}"); shift;;
    esac
done

: ${SVN_REPO_ROOT:=${PROJECTROOT:-.}}
: ${SVN_PRODUCT_VERSION_PATH:=data/version}

set -o pipefail
if [ ${#revisions[@]} -eq 0 ]; then
    readarray -t revisions < <(svn info --non-interactive "$SVN_REPO_ROOT" | sed -n -e 's/^Revision: \(.*\)$/\1/p'; printf '\n%d\n' "$?")	# Exit status from the process substitution is lost; return the actual exit status via an appended additional line.
    [ ${revisions[-1]} -ne 0 ] && exit ${revisions[-1]}
    unset 'revisions[-1]'
    [ -z "${revisions[-1]}" ] && unset 'revisions[-1]'
fi

repositoryUrl=$(svn-url "$SVN_REPO_ROOT") || exit $?
for revision in "${revisions[@]}"
do
    version=$(svn --non-interactive cat --revision "$revision" "${repositoryUrl}/${SVN_PRODUCT_VERSION_PATH}") || exit $?
    printf '%s.%s\n' "$version" "$revision"
done | "${PAGER:-less}" --quit-on-intr --RAW-CONTROL-CHARS
