#!/bin/sh

printUsage()
{
    cat <<HELPTEXT
Verbose log messages. 
Use -v to include a list of changed files. 
Usage: "$(basename "$1")" [--no-merge] [-v|--verbose] [-c M | -r N[:M]] [-l|--limit ARG] [PATH...] [-?|-h|--help]
HELPTEXT
}

mergeFilter()
{
    sed -e '
# Silently capture all header lines until the revision summary in pattern space. 
/^revision r[0-9]\+$/ {
    h	# This starts the header. 
    d
}
/^Author:/ {
    H
    d
}
/^Date:/ {
    N		# Following line is empty. 
    H		# Last header line to capture in pattern space. 
    s/^.*$//	# Clear without printing.  
    N		# Inspect revision summary. 
    s/^\n//	# Undo effect of N; n cannot be used because it would print empty line. 
    /[Mm]erg\(e\|ed\|es\|ing\)\b/ {
	# Push special MERGE marker into pattern space. 
	s/^.*$/MERGE/
	h
	d
    }
    # If the revision summary did not mention a merge, we continue in the script
    # with the header in pattern space. 
}

x   # Inspect pattern space. 
/MERGE/ {
    # Currently in merge revision, discard current line. 
    x
    d
}

# Not in merge revision; print header from pattern space once.  
/^$/!p
s/^.*$//

# And print log line, too. 
x
'
}

filter=cat
colorHeader='[36m'
colorFileAdded='[32m'
colorFileChanged='[34m'
colorFileRemoved='[31m'
colorReset='[0m'
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-merge)		shift; filter='mergeFilter';;
esac

svn log "$@" | sed -e '
/^r[0-9]\+/{
    s/\(^r[0-9]\+\) *| *\([^|]\+\) *| *\([^|]\+\) *|.*/revision \1\nAuthor: \2\nDate:   \3 /
}
/^Changed paths:/,/^$/ {
    /^Changed paths:/{
	s/^/\n/
	h
	d
	b
    }
    H
    d
    b
}
/^-\+$/g
' | $filter | sed -e "
s/^revision r[0-9]\\+$/${colorHeader}\\0${colorReset}/
/^Changed paths:/,/^\$/ {
    s/^ \\+A .*\$/${colorFileAdded}\\0${colorReset}/
    s/^ \\+M .*\$/${colorFileChanged}\\0${colorReset}/
    s/^ \\+R .*\$/${colorFileRemoved}\\0${colorReset}/
}
" | less --RAW-CONTROL-CHARS
